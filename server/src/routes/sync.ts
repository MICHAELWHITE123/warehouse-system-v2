import { Router } from 'express';
import { auth } from '../middleware/auth';
import { SyncController } from '../controllers/SyncController';
import {
  validateSyncPush,
  validateSyncPull,
  validateSyncStatus,
  validateConflictResolution,
  validatePagination,
  validateSyncFilters
} from '../middleware/validation';

const router = Router();
const syncController = new SyncController();

// Legacy endpoint –ë–ï–ó –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
/**
 * @route GET /api/sync/operations
 * @desc Legacy PULL –æ–ø–µ—Ä–∞—Ü–∏–∏ (–±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤)
 * @access Public (Legacy compatibility)
 */
router.get('/operations', async (req, res) => {
  try {
    const { deviceId, lastSync } = req.query;
    const lastSyncTime = parseInt(lastSync as string) || 0;
    
    console.log(`üì• Legacy PULL: device=${deviceId}, lastSync=${lastSyncTime}`);
    
    // –ü–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –æ–ø–µ—Ä–∞—Ü–∏–π
    const operations: any[] = [];
    
    console.log(`üì§ Legacy PULL: Returned ${operations.length} operations to device ${deviceId}`);
    
    return res.status(200).json({
      operations,
      serverTime: Date.now(),
      debug: {
        message: 'Legacy endpoint without auth',
        deviceId,
        lastSyncTime,
        note: 'This endpoint is for backward compatibility'
      }
    });
    
  } catch (error) {
    console.error('‚ùå Legacy Operations API Error:', error);
    return res.status(500).json({ 
      error: 'Failed to fetch operations',
      legacy: true 
    });
  }
});

// –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã —Ç—Ä–µ–±—É—é—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
router.use(auth);

/**
 * @route POST /api/sync/push
 * @desc –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä (PUSH —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è)
 * @access Private
 */
router.post('/push', validateSyncPush, syncController.pushChanges);

/**
 * @route POST /api/sync/pull
 * @desc –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ (PULL —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è)
 * @access Private
 */
router.post('/pull', validateSyncPull, syncController.pullChanges);

/**
 * @route GET /api/sync/status
 * @desc –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @access Private
 */
router.get('/status', validateSyncStatus, syncController.getSyncStatus);

/**
 * @route GET /api/sync/history
 * @desc –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
 * @access Private
 */
router.get('/history', validatePagination, validateSyncFilters, syncController.getSyncHistory);

/**
 * @route GET /api/sync/conflicts
 * @desc –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
 * @access Private
 */
router.get('/conflicts', syncController.getConflicts);

/**
 * @route GET /api/sync/conflicts/:id/recommendation
 * @desc –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—é –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞
 * @access Private
 */
router.get('/conflicts/:id/recommendation', syncController.getConflictRecommendation);

/**
 * @route POST /api/sync/conflicts/:id/resolve
 * @desc –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
 * @access Private
 */
router.post('/conflicts/:id/resolve', validateConflictResolution, syncController.resolveConflict);

/**
 * @route GET /api/sync/validate
 * @desc –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
 * @access Private
 */
router.get('/validate', syncController.validateSyncIntegrity);

/**
 * @route POST /api/sync/cleanup
 * @desc –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∑–∞–ø–∏—Å–µ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)
 * @access Private (Admin only)
 */
router.post('/cleanup', syncController.cleanupOldEntries);

/**
 * @route POST /api/sync/force/:deviceId
 * @desc –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
 * @access Private
 */
router.post('/force/:deviceId', syncController.forceSync);

export default router;