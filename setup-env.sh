#!/bin/bash

# ========================================
# WeareHouse System - Environment Setup Script
# ========================================
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–º–æ–≥–∞–µ—Ç –±—ã—Å—Ç—Ä–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è

set -e

echo "üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è WeareHouse System"
echo "=================================================="

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
select_environment() {
    echo ""
    echo "–í—ã–±–µ—Ä–∏—Ç–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:"
    echo "1) Development (–ª–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞)"
    echo "2) Production (Vercel)"
    echo "3) Supabase (—Ç–æ–ª—å–∫–æ Supabase)"
    echo "4) –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
    echo "5) –í—ã—Ö–æ–¥"
    echo ""
    read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-5): " choice
    
    case $choice in
        1) setup_development ;;
        2) setup_production ;;
        3) setup_supabase ;;
        4) check_environment ;;
        5) echo "–í—ã—Ö–æ–¥ –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞"; exit 0 ;;
        *) echo "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."; select_environment ;;
    esac
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ development –æ–∫—Ä—É–∂–µ–Ω–∏—è
setup_development() {
    echo ""
    echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Development –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    # Frontend
    if [ -f "env.development" ]; then
        cp env.development .env.local
        echo "‚úÖ Frontend: env.development —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ .env.local"
    else
        echo "‚ùå –§–∞–π–ª env.development –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    # Backend
    if [ -d "server" ] && [ -f "server/env.development" ]; then
        cd server
        cp env.development .env
        echo "‚úÖ Backend: env.development —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ .env"
        cd ..
    else
        echo "‚ùå –ü–∞–ø–∫–∞ server –∏–ª–∏ —Ñ–∞–π–ª env.development –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    echo ""
    echo "üéØ Development –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ!"
    echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π: npm run dev"
    echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∫–æ–º–∞–Ω–¥–æ–π: cd server && npm run dev"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ production –æ–∫—Ä—É–∂–µ–Ω–∏—è
setup_production() {
    echo ""
    echo "üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Production –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    # Frontend
    if [ -f "env.production" ]; then
        cp env.production .env.local
        echo "‚úÖ Frontend: env.production —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ .env.local"
    else
        echo "‚ùå –§–∞–π–ª env.production –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    # Backend
    if [ -d "server" ] && [ -f "server/env.production" ]; then
        cd server
        cp env.production .env
        echo "‚úÖ Backend: env.production —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ .env"
        cd ..
    else
        echo "‚ùå –ü–∞–ø–∫–∞ server –∏–ª–∏ —Ñ–∞–π–ª env.production –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    echo ""
    echo "üéØ Production –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ!"
    echo "–î–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ Vercel –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: npm run build"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Supabase –æ–∫—Ä—É–∂–µ–Ω–∏—è
setup_supabase() {
    echo ""
    echo "üîó –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Supabase –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    # Backend
    if [ -d "server" ] && [ -f "server/env.supabase.example" ]; then
        cd server
        cp env.supabase.example .env
        echo "‚úÖ Backend: env.supabase.example —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ .env"
        cd ..
    else
        echo "‚ùå –ü–∞–ø–∫–∞ server –∏–ª–∏ —Ñ–∞–π–ª env.supabase.example –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    echo ""
    echo "üéØ Supabase –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ!"
    echo "–ù–µ –∑–∞–±—É–¥—å—Ç–µ –∑–∞–ø–æ–ª–Ω–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ .env —Ñ–∞–π–ª–µ"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
check_environment() {
    echo ""
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫..."
    
    # Frontend
    if [ -f ".env.local" ]; then
        echo "‚úÖ Frontend: .env.local –Ω–∞–π–¥–µ–Ω"
        echo "   –°–æ–¥–µ—Ä–∂–∏—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:"
        grep -E "^VITE_" .env.local | head -5
        if [ $(grep -c "^VITE_" .env.local) -gt 5 ]; then
            echo "   ... –∏ –µ—â–µ $(($(grep -c "^VITE_" .env.local) - 5)) –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö"
        fi
    else
        echo "‚ùå Frontend: .env.local –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    # Backend
    if [ -d "server" ] && [ -f "server/.env" ]; then
        echo "‚úÖ Backend: .env –Ω–∞–π–¥–µ–Ω"
        echo "   –°–æ–¥–µ—Ä–∂–∏—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:"
        grep -E "^(NODE_ENV|PORT|SUPABASE|DB_|JWT_)" server/.env | head -5
        if [ $(grep -c "^(NODE_ENV|PORT|SUPABASE|DB_|JWT_)" server/.env) -gt 5 ]; then
            echo "   ... –∏ –µ—â–µ $(($(grep -c "^(NODE_ENV|PORT|SUPABASE|DB_|JWT_)" server/.env) - 5)) –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö"
        fi
    else
        echo "‚ùå Backend: .env –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    echo ""
    echo "üìã –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç 1, 2 –∏–ª–∏ 3"
}

# –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
main() {
    echo ""
    echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "  npm run env:dev      - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ development –æ–∫—Ä—É–∂–µ–Ω–∏—è"
    echo "  npm run env:prod     - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ production –æ–∫—Ä—É–∂–µ–Ω–∏—è"
    echo "  npm run env:check    - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"
    echo "  npm run env:reset    - –°–±—Ä–æ—Å –ª–æ–∫–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"
    echo ""
    
    select_environment
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
main
