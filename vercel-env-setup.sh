#!/bin/bash

# üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Environment Variables –¥–ª—è Vercel + Supabase
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–º–æ–∂–µ—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è

echo "üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Environment Variables –¥–ª—è WeareHouse"
echo "================================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ü–≤–µ—Ç–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
print_color() {
    printf "${1}${2}${NC}\n"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ Vercel
vercel_cmd() {
    npx vercel "$@"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É Vercel CLI —á–µ—Ä–µ–∑ npx
print_color $BLUE "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º Vercel CLI..."
if vercel_cmd --version &> /dev/null; then
    print_color $GREEN "‚úÖ Vercel CLI –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ npx"
else
    print_color $RED "‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç—å Vercel CLI"
    print_color $YELLOW "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å Node.js –∏–ª–∏ npm"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –≤ Vercel
print_color $BLUE "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –≤ Vercel..."
if ! vercel_cmd whoami &> /dev/null; then
    print_color $YELLOW "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ Vercel..."
    vercel_cmd login
fi

print_color $GREEN "‚úÖ –í—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –≤ Vercel"

# –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
echo ""
print_color $BLUE "üìù –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤–∞—à–µ–≥–æ Supabase –ø—Ä–æ–µ–∫—Ç–∞:"
echo ""

read -p "Supabase Project URL (https://xxx.supabase.co): " SUPABASE_URL
read -p "Supabase Anon Key: " SUPABASE_ANON_KEY
read -p "Supabase Service Role Key: " SUPABASE_SERVICE_KEY

# –í–∞–ª–∏–¥–∞—Ü–∏—è –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
if [[ -z "$SUPABASE_URL" || -z "$SUPABASE_ANON_KEY" || -z "$SUPABASE_SERVICE_KEY" ]]; then
    print_color $RED "‚ùå –í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç URL
if [[ ! "$SUPABASE_URL" =~ ^https://.*\.supabase\.co$ ]]; then
    print_color $RED "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç Supabase URL"
    print_color $YELLOW "–î–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ: https://xxx.supabase.co"
    exit 1
fi

echo ""
print_color $BLUE "üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –≤ Vercel
add_vercel_env() {
    local key=$1
    local value=$2
    local environments=${3:-"production,preview,development"}
    
    print_color $YELLOW "–î–æ–±–∞–≤–ª—è–µ–º $key..."
    
    # –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –µ—Å–ª–∏ –µ—Å—Ç—å
    vercel_cmd env rm $key production --yes 2>/dev/null || true
    vercel_cmd env rm $key preview --yes 2>/dev/null || true
    vercel_cmd env rm $key development --yes 2>/dev/null || true
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    echo "$value" | vercel_cmd env add $key production
    echo "$value" | vercel_cmd env add $key preview  
    echo "$value" | vercel_cmd env add $key development
    
    if [ $? -eq 0 ]; then
        print_color $GREEN "‚úÖ $key –¥–æ–±–∞–≤–ª–µ–Ω"
    else
        print_color $RED "‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è $key"
        return 1
    fi
}

# –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
print_color $BLUE "–î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ (VITE_)..."
add_vercel_env "VITE_SUPABASE_URL" "$SUPABASE_URL"
add_vercel_env "VITE_SUPABASE_ANON_KEY" "$SUPABASE_ANON_KEY"
add_vercel_env "VITE_APP_NAME" "–°–∏—Å—Ç–µ–º–∞ —É—á–µ—Ç–∞ —Ç–µ—Ö–Ω–∏–∫–∏ –Ω–∞ —Å–∫–ª–∞–¥–µ"

print_color $BLUE "–î–æ–±–∞–≤–ª—è–µ–º —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ..."
add_vercel_env "SUPABASE_URL" "$SUPABASE_URL"
add_vercel_env "SUPABASE_SERVICE_ROLE_KEY" "$SUPABASE_SERVICE_KEY"

# –°–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π .env.local —Ñ–∞–π–ª
print_color $BLUE "üìÑ –°–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π .env.local —Ñ–∞–π–ª..."

cat > .env.local << EOF
# Supabase Configuration
VITE_SUPABASE_URL=$SUPABASE_URL
VITE_SUPABASE_ANON_KEY=$SUPABASE_ANON_KEY

# App Configuration
VITE_APP_NAME=–°–∏—Å—Ç–µ–º–∞ —É—á–µ—Ç–∞ —Ç–µ—Ö–Ω–∏–∫–∏ –Ω–∞ —Å–∫–ª–∞–¥–µ
VITE_API_URL=http://localhost:3000/api

# Server-side (–¥–ª—è API functions)
SUPABASE_URL=$SUPABASE_URL
SUPABASE_SERVICE_ROLE_KEY=$SUPABASE_SERVICE_KEY
EOF

print_color $GREEN "‚úÖ –§–∞–π–ª .env.local —Å–æ–∑–¥–∞–Ω"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º .gitignore
if ! grep -q ".env.local" .gitignore 2>/dev/null; then
    print_color $YELLOW "–î–æ–±–∞–≤–ª—è–µ–º .env.local –≤ .gitignore..."
    echo "" >> .gitignore
    echo "# Environment files" >> .gitignore
    echo ".env.local" >> .gitignore
    echo ".env*.local" >> .gitignore
    print_color $GREEN "‚úÖ .gitignore –æ–±–Ω–æ–≤–ª–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
echo ""
print_color $BLUE "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö..."
vercel_cmd env ls

echo ""
print_color $GREEN "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
print_color $BLUE "üìã –ß—Ç–æ –¥–∞–ª—å—à–µ:"
echo "1. –í—ã–ø–æ–ª–Ω–∏—Ç–µ: npm run dev (–¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)"
echo "2. –í—ã–ø–æ–ª–Ω–∏—Ç–µ: vercel --prod (–¥–ª—è –¥–µ–ø–ª–æ—è –≤ production)"
echo "3. –û—Ç–∫—Ä–æ–π—Ç–µ test-supabase-realtime.html –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
echo ""
print_color $YELLOW "üí° –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "npx vercel env ls           - –ø—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö"
echo "npx vercel env pull         - —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –ª–æ–∫–∞–ª—å–Ω–æ"
echo "npx vercel logs --follow    - –ø—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
echo ""

# –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç
read -p "–•–æ—Ç–∏—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase? (y/n): " test_connection

if [[ "$test_connection" =~ ^[Yy]$ ]]; then
    print_color $BLUE "üß™ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è..."
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    cat > test-connection.js << EOF
import { createClient } from '@supabase/supabase-js';

const supabase = createClient(
  process.env.VITE_SUPABASE_URL || '$SUPABASE_URL',
  process.env.VITE_SUPABASE_ANON_KEY || '$SUPABASE_ANON_KEY'
);

async function testConnection() {
  try {
    console.log('üîó –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase...');
    
    const { data, error } = await supabase
      .from('equipment')
      .select('count', { count: 'exact', head: true });
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error.message);
    } else {
      console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ! –ó–∞–ø–∏—Å–µ–π –≤ equipment:', data);
    }
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', err.message);
  }
}

testConnection();
EOF

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç (–Ω—É–∂–µ–Ω Node.js —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π ES modules)
    if command -v node &> /dev/null; then
        node test-connection.js 2>/dev/null || print_color $YELLOW "‚ö†Ô∏è –î–ª—è —Ç–µ—Å—Ç–∞ –Ω—É–∂–Ω–æ —Å–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å Supabase —Ç–∞–±–ª–∏—Ü—ã"
        rm test-connection.js
    fi
fi

print_color $GREEN "üöÄ –ì–æ—Ç–æ–≤–æ! –í–∞—à –ø—Ä–æ–µ–∫—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Vercel + Supabase"
