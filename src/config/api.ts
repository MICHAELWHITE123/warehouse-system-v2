// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è API
export const API_CONFIG = {
  // –ë–∞–∑–æ–≤—ã–π URL API - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –ø–æ –æ–∫—Ä—É–∂–µ–Ω–∏—é
  BASE_URL: (() => {
    // –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–ï –ù–ê VERCEL API –í PRODUCTION
    if (window.location.hostname.includes('vercel.app')) {
      console.log('üîß –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–∞—é—Å—å –Ω–∞ Vercel API –≤ production');
      return ''; // –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –∑–∞—Å—Ç–∞–≤–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Vercel API
    }
    
    // –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ—ë
    if (import.meta.env.VITE_API_URL) {
      return import.meta.env.VITE_API_URL;
    }
    
    // –ï—Å–ª–∏ –Ω–∞ Vercel, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π API
    if (window.location.hostname.includes('vercel.app')) {
      // –í production –Ω–∞ Vercel –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π API
      return `${window.location.origin}/api`;
    }
    
    // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    return 'http://localhost:3001';
  })(),
  
  // Upstash Redis –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (KV)
  REDIS: {
    URL: import.meta.env.VITE_UPSTASH_REDIS_REST_URL || '',
    TOKEN: import.meta.env.VITE_UPSTASH_REDIS_REST_TOKEN || '',
    ENABLED: !!(import.meta.env.VITE_UPSTASH_REDIS_REST_URL && import.meta.env.VITE_UPSTASH_REDIS_REST_TOKEN)
  },
  
  // Neon Postgres –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
  POSTGRES: {
    URL: import.meta.env.VITE_NEON_DATABASE_URL || '',
    HOST: import.meta.env.VITE_NEON_HOST || '',
    DATABASE: import.meta.env.VITE_NEON_DATABASE || '',
    USERNAME: import.meta.env.VITE_NEON_USERNAME || '',
    PASSWORD: import.meta.env.VITE_NEON_PASSWORD || '',
    ENABLED: !!(import.meta.env.VITE_NEON_DATABASE_URL && import.meta.env.VITE_NEON_PASSWORD)
  },
  
  // –¢–∞–π–º–∞—É—Ç—ã
  TIMEOUT: 30000, // 30 —Å–µ–∫—É–Ω–¥
  
  // –ò–Ω—Ç–µ—Ä–≤–∞–ª—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
  SYNC: {
    AUTO_SYNC_INTERVAL: 30000, // 30 —Å–µ–∫—É–Ω–¥
    STATUS_UPDATE_INTERVAL: 5000, // 5 —Å–µ–∫—É–Ω–¥
    RETRY_DELAY: 1000, // 1 —Å–µ–∫—É–Ω–¥–∞
    MAX_RETRIES: 3
  },
  
  // –ó–∞–≥–æ–ª–æ–≤–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  DEFAULT_HEADERS: {
    'Content-Type': 'application/json',
    'Accept': 'application/json'
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ URL API
export const getApiUrl = (endpoint: string): string => {
  const baseUrl = API_CONFIG.BASE_URL;
  
  console.log(`üîß getApiUrl called with endpoint: ${endpoint}`);
  console.log(`üîß API_CONFIG.BASE_URL: ${baseUrl}`);
  console.log(`üîß window.location.hostname: ${window.location.hostname}`);
  
  // –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–ï –ù–ê VERCEL API –í PRODUCTION
  if (window.location.hostname.includes('vercel.app')) {
    const url = `/api/${endpoint}`;
    console.log(`üîß –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –∏—Å–ø–æ–ª—å–∑—É—é Vercel API: ${url}`);
    return url;
  }
  
  // –ï—Å–ª–∏ –±–∞–∑–æ–≤—ã–π URL –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º Vercel API
  if (!baseUrl || baseUrl.trim() === '') {
    // –ù–∞ Vercel –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –ø—É—Ç–∏ –∫ API
    if (window.location.hostname.includes('vercel.app')) {
      const url = `/api/${endpoint}`;
      console.log(`üîß Using Vercel API: ${url}`);
      return url;
    }
    // –í development –∏—Å–ø–æ–ª—å–∑—É–µ–º localhost
    const url = `http://localhost:3001/${endpoint}`;
    console.log(`üîß Using localhost API: ${url}`);
    return url;
  }
  
  // –ï—Å–ª–∏ —ç—Ç–æ Supabase URL, –∏—Å–ø–æ–ª—å–∑—É–µ–º Edge Functions API
  if (baseUrl.includes('supabase.co')) {
    const cleanBaseUrl = baseUrl.replace(/\.supabase\.co.*$/, '.supabase.co'); // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –ø–æ—Å–ª–µ .supabase.co
    const url = `${cleanBaseUrl}/functions/v1/${endpoint}`;
    console.log(`üîß Using Supabase API: ${url}`);
    return url;
  }
  
  // –ï—Å–ª–∏ —ç—Ç–æ Vercel API, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º—ã–µ –ø—É—Ç–∏
  if (baseUrl.includes('/api')) {
    const cleanBaseUrl = baseUrl.replace(/\/$/, ''); // –£–±–∏—Ä–∞–µ–º trailing slash
    const cleanEndpoint = endpoint.replace(/^\//, ''); // –£–±–∏—Ä–∞–µ–º leading slash
    const url = `${cleanBaseUrl}/functions/v1/${cleanEndpoint}`;
    console.log(`üîß Using configured Vercel API: ${url}`);
    return url;
  }
  
  const cleanBaseUrl = baseUrl.replace(/\/$/, ''); // –£–±–∏—Ä–∞–µ–º trailing slash
  const cleanEndpoint = endpoint.replace(/^\//, ''); // –£–±–∏—Ä–∞–µ–º leading slash
  const url = `${cleanBaseUrl}/${cleanEndpoint}`;
  console.log(`üîß Using fallback API: ${url}`);
  return url;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
export const isApiAvailable = (): boolean => {
  // –ï—Å–ª–∏ –±–∞–∑–æ–≤—ã–π URL –Ω–µ —É–∫–∞–∑–∞–Ω, –Ω–æ –º—ã –Ω–∞ Vercel, API –¥–æ—Å—Ç—É–ø–µ–Ω
  if (!API_CONFIG.BASE_URL || API_CONFIG.BASE_URL.trim() === '') {
    return window.location.hostname.includes('vercel.app');
  }
  return !!API_CONFIG.BASE_URL;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Redis
export const isRedisAvailable = (): boolean => {
  return API_CONFIG.REDIS.ENABLED;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Postgres
export const isPostgresAvailable = (): boolean => {
  return API_CONFIG.POSTGRES.ENABLED;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
export const getAuthHeaders = (deviceId?: string): Record<string, string> => {
  const token = localStorage.getItem('auth-token');
  const supabaseKey = import.meta.env.VITE_SUPABASE_ANON_KEY;
  
  // –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º Supabase, –¥–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
  if (API_CONFIG.BASE_URL && API_CONFIG.BASE_URL.includes('supabase.co')) {
    return {
      ...API_CONFIG.DEFAULT_HEADERS,
      'apikey': supabaseKey || '',
      'Authorization': `Bearer ${supabaseKey || ''}`,
      ...(token && { 'Authorization': `Bearer ${token}` })
    };
  }
  
  // –î–ª—è Vercel API –∏–ª–∏ –∫–æ–≥–¥–∞ –±–∞–∑–æ–≤—ã–π URL –Ω–µ —É–∫–∞–∑–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
  return {
    ...API_CONFIG.DEFAULT_HEADERS,
    ...(token && { 'Authorization': `Bearer ${token}` }),
    ...(deviceId && { 'X-Device-ID': deviceId })
  };
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ Redis
export const getRedisHeaders = (): Record<string, string> => {
  return {
    'Authorization': `Bearer ${API_CONFIG.REDIS.TOKEN}`,
    'Content-Type': 'application/json'
  };
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ Postgres
export const getPostgresHeaders = (): Record<string, string> => {
  return {
    'Content-Type': 'application/json'
  };
};
